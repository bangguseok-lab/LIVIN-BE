name: 🚀 CI/CD for Spring WAR Project

on:
  push:
    branches: [ "Feat/**", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_KEY: ${{ secrets.EC2_KEY }}

jobs:
  build-and-test:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🧹 Clean & Build WAR
        run: ./gradlew clean build

      - name: 🧪 Run Tests
        run: ./gradlew test

  docker-build-and-push:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 🏗️ Docker Build
        run: docker build -t ${{ secrets.DOCKER_REPO }} .

      - name: 📤 Docker Push
        run: docker push ${{ secrets.DOCKER_REPO }}

  deploy-to-ec2:
    name: 🚀 Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: 📦 Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: LIVIN-BE/docker/docker-compose.yml
          target: /home/ubuntu/app/

      - name: 🚀 Deploy using docker-compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/app

            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

            docker-compose down
            docker-compose pull
            docker-compose up -d --remove-orphans
